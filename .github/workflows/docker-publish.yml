name: Build docker image and publish to Docker Hub
on:
  # Build on demand:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Docker image tag'
        required: true
  push:
    # Sequence of patterns matched against refs/heads
    branches:
      # Push events on master branch
      - master
    # Sequence of patterns matched against refs/tags
    tags:
      - v*.*.*             # Push events to vx.y.z

  pull_request:
    branches:
      - master

  # Publish `vx.y.z` tags as releases:
  #release:
  #  types: [published]

jobs:
  build_and_push:
    name: Build and push docker image to Docker Hub
    runs-on: ubuntu-latest
    #if: github.event_name == 'push'
    steps:
#     -
#        name: Check out the repo
#        uses: actions/checkout@v2
      -
        name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          # logout at job end:
          logout: true
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
          # logout at job end:
          logout: true
      -
        name: Build (but not push)
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          tags: testillano/kcap:local
#          file: Dockerfile
#          context: .
          #push: true
      -
        name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
      -
        name: Push image manually
        run: |
          # workflow dispatch event:
          image_tag=${{ github.event.inputs.tag }}
          echo Workflow dispatch image_tag=$image_tag

          # Strip git ref prefix from version
          [ -z "${image_tag}" ] && image_tag=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && image_tag=$(echo $image_tag | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$image_tag" == "master" ] && image_tag=latest

          echo Processed image_tag=$image_tag

          for hub in docker.io ghcr.io
          do
            docker tag testillano/kcap:local ${hub}/testillano/kcap:$image_tag
            docker push ${hub}/testillano/kcap:$image_tag
          done
